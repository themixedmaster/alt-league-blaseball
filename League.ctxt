#BlueJ class context
comment0.target=League
comment1.params=
comment1.target=void\ resetLeague()
comment10.params=
comment10.target=void\ printPostseason()
comment11.params=games\ gameSet
comment11.target=java.lang.String\ getRecord(Game[][],\ int)
comment12.params=games\ gameSet
comment12.target=Team\ getRoundWinner(Game[][],\ int)
comment13.params=season
comment13.target=long\ getSeasonStartTime(int)
comment14.params=
comment14.target=void\ scheduleSeason()
comment15.params=startTime
comment15.target=void\ scheduleSeason(long)
comment16.params=
comment16.target=void\ schedulePostseason1()
comment16.text=public\ static\ void\ scheduleSeason(long\ startTime){\r\n\ \ \ \ \ \ \ \ seasonGames\ \=\ new\ Game[99][getTeams().length\ /\ 2];\r\n\ \ \ \ \ \ \ \ for(int\ x\ \=\ 0;\ x\ <\ 99;\ x+\=3){\r\n\ \ \ \ \ \ \ \ \ \ \ \ ArrayList<Team>\ darkTeams\ \=\ new\ ArrayList<Team>();\r\n\ \ \ \ \ \ \ \ \ \ \ \ ArrayList<Team>\ lightTeams\ \=\ new\ ArrayList<Team>();\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(int\ y\ \=\ 0;\ y\ <\ ultraDark.length;\ y++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ darkTeams.add(ultraDark[y]);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(int\ y\ \=\ 0;\ y\ <\ moderateDark.length;\ y++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ darkTeams.add(moderateDark[y]);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(int\ y\ \=\ 0;\ y\ <\ ultraLight.length;\ y++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ lightTeams.add(ultraLight[y]);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(int\ y\ \=\ 0;\ y\ <\ moderateLight.length;\ y++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ lightTeams.add(moderateLight[y]);\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ int\ y\ \=\ 0;\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(;darkTeams.size()\ >\ 1;\ y++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ r1\ \=\ (int)(r.nextDouble()\ *\ darkTeams.size());\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Team\ t1\ \=\ darkTeams.get(r1);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ darkTeams.remove(r1);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ r2\ \=\ (int)(r.nextDouble()\ *\ darkTeams.size());\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Team\ t2\ \=\ darkTeams.get(r2);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ darkTeams.remove(r2);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ seasonGames[x][y]\ \=\ new\ Game(t1,t2,x+1,startTime\ +\ (3600000\ *\ x),season);\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ seasonGames[x+1][y]\ \=\ new\ Game(t1,t2,x+2,startTime\ +\ (3600000\ *\ (x+1)),season);\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ seasonGames[x+2][y]\ \=\ new\ Game(t1,t2,x+3,startTime\ +\ (3600000\ *\ (x+2)),season);\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ for(;lightTeams.size()\ >\ 1;\ y++){\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ r1\ \=\ (int)(r.nextDouble()\ *\ lightTeams.size());\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Team\ t1\ \=\ lightTeams.get(r1);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ lightTeams.remove(r1);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ r2\ \=\ (int)(r.nextDouble()\ *\ lightTeams.size());\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Team\ t2\ \=\ lightTeams.get(r2);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ lightTeams.remove(r2);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ seasonGames[x][y]\ \=\ new\ Game(t1,t2,x+1,startTime\ +\ (3600000\ *\ x),season);\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ seasonGames[x+1][y]\ \=\ new\ Game(t1,t2,x+2,startTime\ +\ (3600000\ *\ (x+1)),season);\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ seasonGames[x+2][y]\ \=\ new\ Game(t1,t2,x+3,startTime\ +\ (3600000\ *\ (x+2)),season);\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ }\r\n}
comment17.params=
comment17.target=void\ schedulePostseason2()
comment18.params=
comment18.target=void\ schedulePostseason3()
comment19.params=day
comment19.target=Game[]\ getCurrentGames(int)
comment2.params=
comment2.target=void\ runPostseason()
comment20.params=
comment20.target=int\ getGameDay()
comment21.params=
comment21.target=Team[]\ getTeams()
comment22.params=
comment22.target=java.util.ArrayList\ allTeams()
comment23.params=
comment23.target=java.util.ArrayList\ allPlayers()
comment24.params=
comment24.target=void\ runAllGames()
comment25.params=
comment25.target=void\ runAllPostseason1Games()
comment26.params=
comment26.target=void\ runAllPostseason2Games()
comment27.params=
comment27.target=void\ runAllPostseason3Games()
comment28.params=season
comment28.target=Game[][]\ getGames(int)
comment29.params=games\ season
comment29.target=void\ setSeasonOfGames(Game[][],\ int)
comment3.params=day
comment3.target=void\ runPostseason(int)
comment30.params=
comment30.target=void\ recapSeason0()
comment31.params=
comment31.target=void\ recapSeason3()
comment32.params=
comment32.target=void\ recapSeason1()
comment33.params=
comment33.target=void\ recapSeason2()
comment34.params=
comment34.target=void\ recapVortex()
comment35.params=
comment35.target=void\ recapAltAlt()
comment4.params=day
comment4.target=void\ runGamesUpToDay(int)
comment5.params=
comment5.target=void\ sortLeague()
comment6.params=list
comment6.target=void\ selectionSort(Team[])
comment7.params=
comment7.target=void\ printLeague()
comment8.params=
comment8.target=int\ longestTeamNameLength()
comment9.params=s\ length
comment9.target=java.lang.String\ addSpaces(java.lang.String,\ int)
numComments=36
